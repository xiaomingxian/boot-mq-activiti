# ----------------------------------------  生产者
# 是否开启自动配置
rocketmq.producer.isOnOff=on
# 发送同一类消息设置为同一个group，保证唯一默认不需要设置，rocketmq会使用ip@pid（pid代表jvm名字）作为唯一标识
#rocketmq.producer.groupName=${spring.application.name}
rocketmq.producer.groupName=test
# mq的nameserver地址
rocketmq.producer.namesrvAddr=49.234.25.12:9876
# 消息最大长度 默认 1024 * 4 (4M)
rocketmq.producer.maxMessageSize=4096
# 发送消息超时时间，默认 3000
rocketmq.producer.sendMsgTimeOut=300000
# 发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed=2






# ----------------------------------------  消费者
# 是否开启自动配置
filter.rocketmq.consumer.isOnOff=on
# 发送同一类消息设置为同一个group，保证唯一默认不需要设置，rocketmq会使用ip@pid（pid代表jvm名字）作为唯一标识
filter.rocketmq.consumer.groupName=myFilterConsumerGroup
# mq的nameserver地址
filter.rocketmq.consumer.namesrvAddr=49.234.25.12:9876
# 消费者订阅的主题topic和tags（*标识订阅该主题下所有的tags），格式: topic~tag1||tag2||tags3;
filter.rocketmq.consumer.topics=filterTopic~*
# 消费者线程数据量
filter.rocketmq.consumer.consumeThreadMin=5
filter.rocketmq.consumer.consumeThreadMax=32
# 设置一次消费信心的条数，默认1
filter.rocketmq.consumer.consumeMessageBatchMaxSize=1




# ----------------------------------------  消费者2
# 是否开启自动配置
nomal.rocketmq.consumer.isOnOff=on
# 发送同一类消息设置为同一个group，保证唯一默认不需要设置，rocketmq会使用ip@pid（pid代表jvm名字）作为唯一标识
nomal.rocketmq.consumer.groupName=myConsumerGroup
# mq的nameserver地址
nomal.rocketmq.consumer.namesrvAddr=49.234.25.12:9876
# 消费者订阅的主题topic和tags（*标识订阅该主题下所有的tags），格式: topic~tag1||tag2||tags3;
nomal.rocketmq.consumer.topics=TestTopic~TestTag;HelloTopic~HelloTag;delayTopic~*;batchTopic~*;MyTopic~*;TransactionTopic~*
# 消费者线程数据量
nomal.rocketmq.consumer.consumeThreadMin=5
nomal.rocketmq.consumer.consumeThreadMax=32
# 设置一次消费信心的条数，默认1
nomal.rocketmq.consumer.consumeMessageBatchMaxSize=1




# ----------------------------------------  消费者2 广播模式
# 是否开启自动配置
board.rocketmq.consumer.isOnOff=on
# 发送同一类消息设置为同一个group，保证唯一默认不需要设置，rocketmq会使用ip@pid（pid代表jvm名字）作为唯一标识
board.rocketmq.consumer.groupName=brodConsumerGroup
# mq的nameserver地址
board.rocketmq.consumer.namesrvAddr=49.234.25.12:9876
# 消费者订阅的主题topic和tags（*标识订阅该主题下所有的tags），格式: topic~tag1||tag2||tags3;
board.rocketmq.consumer.topics=brodTopic~*
# 消费者线程数据量
board.rocketmq.consumer.consumeThreadMin=5
board.rocketmq.consumer.consumeThreadMax=32
# 设置一次消费信心的条数，默认1
board.rocketmq.consumer.consumeMessageBatchMaxSize=1






#demo   http://dianzishu.mtboo.com/article/javazhishifenxiang/9069.html
#--------------------------------------------  控制台
#docker run -d --restart=always -e "JAVA_OPTS=-Drocketmq.namesrv.addr=49.234.25.12:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false" -p 8080:8080 -t styletang/rocketmq-console-ng
# ---------- nameSrv
# nohup sh ./mqnamesrv &
# ---------- broker
# ./broker -m > ../conf/broker.conf  生成配置文件  去掉时间相关的  修改brokerIP 否则会走第一块网卡的地址
# nohup sh mqbroker -n localhost:9876 autoCreateTopicEnable=true  -c ../conf/broker.conf &

